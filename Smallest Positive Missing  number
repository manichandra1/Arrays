/*Smallest Positive Missing Number*/

import java.util.*;
public class Main
{   
    public static int abs(int n){
        if(n<0)
            return -n;
        return n;
    }
    
    public static int return_firstmissingPositive(int arr[],int n){
        int i;
        for(i=0;i<n;i++){
            
            if( arr[i]<=n  && arr[abs(arr[i])-1]>0 ){
                arr[arr[i]-1]=-arr[arr[i]-1];
            }
        }
        System.out.println("\n reaaranged2");
        for(i=0;i<n;i++){
            System.out.print(arr[i]+" ");
        }
        for(i=0;i<n;i++){
            if(arr[i]>0){
                return i+1;
            }
        }
        return n+1;
    }
    
    public static void rearrange(int arr[],int n){
        int high=n,i=0;
        while(i<high)
        {
            if(arr[i]<=0){
                high-=1;
                int temp=arr[i];
                arr[i]=arr[high];
                arr[high]=temp;
                continue;
            }
            i+=1;
        }
        for(i=high;i<n;i++){
            arr[i]=10000;
        }
    }
    
	public static void main(String[] args) {
        int  n,i;
        Scanner sc=new Scanner(System.in);
        n=sc.nextInt();
        int arr[]=new int[n];
        for(i=0;i<n;i++){
            arr[i]=sc.nextInt();
        }
        rearrange(arr,n);
        System.out.println("\n reaaranged");
        for(i=0;i<n;i++){
            System.out.print(arr[i]+" ");
        }
	    System.out.println(return_firstmissingPositive(arr,n));
	}
}
------------------------------------------------------------------------------------------------------
Time Complexity:O(n)
Space Complexity:O(1)
------------------------------------------------------------------------------------------------------
